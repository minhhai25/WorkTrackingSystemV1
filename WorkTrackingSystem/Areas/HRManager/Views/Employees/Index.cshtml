@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<WorkTrackingSystem.Models.Employee>
@{
	ViewData["Title"] = "Danh sách nhân viên";
	Layout = "~/Areas/HRManager/Views/Shared/_HRManager.cshtml";
}

<style>
} </style>
<div class="row">
	<div class="col-md-12" id="list-section">
		<h1 class="mb-4 text-center"><i class="bi bi-people"></i> Danh sách nhân viên</h1>


		<div class="row mb-2">
			<div class="col-lg-9 col-md-9 col-sm-12">
				<form asp-controller="Employees" asp-action="Index" method="get" class="row">
					<div class="col-md-5">
						<div class="input-group">
							<input type="text" class="form-control" name="search" placeholder="Nhập tên nhân viên" value="@Context.Request.Query["search"]" />
						</div>
					</div>
					<div class="col-md-4">
						<select class="form-select" id="DepartmentId" name="DepartmentId" asp-items="ViewBag.Department">
							<option value="0" disabled selected>Chọn phòng ban</option>
						</select>
					</div>
					<div class="col-md-3">
						<button type="submit" class="btn btn-primary">Tìm kiếm & Lọc</button>
					</div>
				</form>
			</div>

		</div>


		<div class="table-responsive">
			<table class="table table-striped table-bordered">
				<thead>
					<tr>
						<th><i class="bi bi-code-square"></i> @Html.DisplayNameFor(model => model.FirstOrDefault().Code)</th>
						<th><i class="bi bi-person"></i> Họ và tên</th>
						<th><i class="bi bi-gender-ambiguous"></i> @Html.DisplayNameFor(model => model.FirstOrDefault().Gender)</th>
						<th><i class="bi bi-calendar-date"></i> @Html.DisplayNameFor(model => model.FirstOrDefault().Birthday)</th>
						<th><i class="bi bi-phone"></i> @Html.DisplayNameFor(model => model.FirstOrDefault().Phone)</th>
						<th><i class="bi bi-envelope"></i> @Html.DisplayNameFor(model => model.FirstOrDefault().Email)</th>
						<th><i class="bi bi-briefcase"></i> @Html.DisplayNameFor(model => model.FirstOrDefault().Position)</th>
						@* <th><i class="bi bi-building"></i> @Html.DisplayNameFor(model => model.FirstOrDefault().Department)</th> *@
						<th><i class="bi bi-gear"></i> Hành động</th>
					</tr>
				</thead>
				<tbody>
					@foreach (var item in Model)
					{
						<tr>
							<td>@Html.DisplayFor(modelItem => item.Code)</td>
							<td>@(item.FirstName + " " + item.LastName)</td>
							<td>@Html.DisplayFor(modelItem => item.Gender)</td>
							<td>@Html.DisplayFor(modelItem => item.Birthday)</td>
							<td>@Html.DisplayFor(modelItem => item.Phone)</td>
							<td>@Html.DisplayFor(modelItem => item.Email)</td>
							<td>@Html.DisplayFor(modelItem => item.Position.Name)</td>
							@* <td>@Html.DisplayFor(modelItem => item.Department.Name)</td> *@
							<td>
								<a class="btn btn-primary btn-sm ajax-action" data-url="@Url.Action("Edit", new { id = item.Id })">
									<i class="bi bi-pencil-square"></i> Sửa
								</a>
								<a class="btn btn-info btn-sm ajax-action" data-url="@Url.Action("Details", new { id = item.Id })">
									<i class="bi bi-info-circle"></i> Chi tiết
								</a>
								<a class="btn btn-danger btn-sm ajax-action" data-url="@Url.Action("Delete", new { id = item.Id })">
									<i class="bi bi-trash"></i> Xóa
								</a>
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>

	</div>
	<div class="col-md-4 d-none" id="detail-section">
		<div class="actionCustomers"></div>
	</div>
</div>

@Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }), new PagedListRenderOptions
{
	LiElementClasses = new string[] { "page-item" },
	PageClasses = new string[] { "page-link" },
	DisplayLinkToFirstPage = PagedListDisplayMode.Always, // Luôn hiển thị nút về trang đầu
	DisplayLinkToLastPage = PagedListDisplayMode.Always, // Luôn hiển thị nút đến trang cuối
	DisplayLinkToPreviousPage = PagedListDisplayMode.Always, // Luôn hiển thị nút trước
	DisplayLinkToNextPage = PagedListDisplayMode.Always, // Luôn hiển thị nút sau
	DisplayEllipsesWhenNotShowingAllPageNumbers = true, // Hiển thị dấu ... nếu có quá nhiều trang
	MaximumPageNumbersToDisplay = 5 // Giới hạn số lượng trang hiển thị
})
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
	$(document).ready(function () {
		$(".ajax-action").click(function (e) {
			e.preventDefault();

			var url = $(this).data("url");

			// Kiểm tra nếu phần chi tiết đang ẩn, thì thay đổi layout
			if ($("#detail-section").hasClass("d-none")) {
				$("#list-section").removeClass("col-md-12").addClass("col-md-8");
				$("#detail-section").removeClass("d-none").addClass("col-md-4");
			}

			// Load nội dung vào phần chi tiết
			$(".actionCustomers").load(url, function (response, status, xhr) {
				if (status === "error") {
					alert("Lỗi khi tải dữ liệu: " + xhr.status + " " + xhr.statusText);
				}
			});
		});
	});
	function closeDetailSection() {
		if ($(window).width() < 768) {
			$("#list-section").hide();
		} else {
			$("#list-section").removeClass("col-md-8").addClass("col-md-12");
		}
		$("#detail-section").addClass("d-none");
	}
</script>